server.port=9094
kafka.send-log-to-mail.topic=coa.dev.send-log-to-mail

spring.kafka.properties.group.id = normal_transaction

spring.kafka.properties.ssl.truststore.location=/Users/jack/github.com/leenawat/spring-boot-example/spring-kafka-producer-config-prop-demo/src/main/resources/kafka.truststore.jks
spring.kafka.properties.ssl.truststore.password=password

spring.kafka.bootstrap-servers=100.127.173.7:19092
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="kafclient" password="kafclient";

# producer configuration
spring.kafka.producer.bootstrap-servers=${spring.kafka.bootstrap-servers}
spring.kafka.producer.properties.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.value.serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.properties.value.serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.trusted.packages=com.*

# consumer configuration
spring.kafka.consumer.bootstrap-servers=${spring.kafka.bootstrap-servers}
spring.kafka.consumer.properties.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.properties.value.deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=com.*

ssl.endpoint.identification.algorithm=
spring.kafka.properties.ssl.endpoint.identification.algorithm=

logging.level.org.apache.kafka=DEBUG
logging.level.org.springframework.kafka=DEBUG
